class RiggedObject {
    bool ik_enabled;
    int anim_update_period;
    int curr_anim_update_time;
    vec3 GetBonePosition(int bone);
    void AddWaterCube(const mat4 &in transform);
    void Ignite();
    void Extinguish();
    void SetFire(float fire);
    void SetWet(float wet);
    BoneTransform GetFrameMatrix(int which);
    void SetFrameMatrix(int which, const BoneTransform &in transform);
    float GetCharScale();
    float GetRelativeCharScale();
    void Draw();
    void CutPlane(const vec3 &in normal, const vec3 &in position, const vec3 &in direction, int type, int depth);
    void Stab(const vec3 &in position, const vec3 &in direction, int type, int depth);
    void SetRagdollStrength(float);
    void RefreshRagdoll();
    void SetRagdollDamping(float);
    void ApplyForceToRagdoll(const vec3 &in force, const vec3 &in position);
    void ApplyForceToBone(const vec3 &in force, const int &in bone);
    void ApplyForceLineToRagdoll(const vec3 &in force, const vec3 &in position, const vec3 &in line_direction);
    void MoveRagdollPart(const string &in, const vec3 &in, float);
    void FixedRagdollPart(int boneID, const vec3 &in);
    void SpikeRagdollPart(int boneID, const vec3 &start, const vec3 &end, const vec3 &pos);
    void ClearBoneConstraints();
    vec3 GetAvgPosition();
    vec3 GetAvgVelocity();
    void CleanBlood();
    void CreateBloodDrip(const string &in IK_label, int IK_link, const vec3 &in raycast_direction);
    void CreateBloodDripAtBone(int bone_id, int IK_link, const vec3 &in raycast_direction);
    vec3 GetAvgAngularVelocity();
    vec3 GetIKTargetPosition(const string &in IK_label);
    float GetIKWeight(const string &in IK_label);
    BoneTransform GetIKTransform(const string &in IK_label);
    mat4 GetUnmodifiedIKTransform(const string &in IK_label);
    mat4 GetIKTargetTransform(const string &in IK_label);
    void SetMorphTargetWeight(const string &in morph_label, float weight, float weight_weight);
    float GetStatusKeyValue(const string &in status_key_label);
    vec3 GetIKTargetAnimPosition(const string &in IK_label);
    mat4 GetAvgIKChainTransform(const string &in IK_label);
    mat4 GetIKChainTransform(const string &in IK_label, int IK_link);
    vec3 GetIKChainPos(const string &in IK_label, int IK_link);
    void DisableSleep();
    void EnableSleep();
    vec3 GetAvgIKChainPos(const string &in IK_label);
    void SetAnimUpdatePeriod(int steps); // Animation is updated every N engine time steps
    void SheatheItem(int item_id, bool on_right);
    void UnSheatheItem(int item_id, bool on_right);
    void UnStickItem(int item_id);
    void SetPrimaryWeaponID(int item_id);
    vec3 GetModelCenter();
    void RotateBoneToMatchVec(const vec3 &in a, const vec3 &in b, int bone);
    void RotateBonesToMatchVec(const vec3 &in a, const vec3 &in c, int bone, int bone2, float weight);
    void TransformAllFrameMats(const BoneTransform &in transform);
    vec3 GetFrameCenterOfMass();
    vec3 GetTransformedBonePoint(int bone, int point);
    mat4 GetDisplayBoneMatrix(int bone);
    void SetDisplayBoneMatrix(int bone, const mat4 &in transform);
    Skeleton &skeleton();
    AnimationClient &anim_client();
};
